"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BULK_UPLOAD = exports.WEB_LEAD = exports.PUT = exports.GET = exports.DELETE = exports.POST = exports.INTERNAL_ERROR = exports.DOES_NOT_EXIST = exports.ERROR = exports.SUCCESS = exports.BULK_CREATE_CONTACTS_LAMBDA = exports.UPDATE_CONTACT_SUBSCRIPTION_LAMBDA = exports.UPDATE_CONTACTS_LAMBDA = exports.RETRIEVE_CONTACTS_LAMBDA = exports.CREATE_CONTACTS_LAMBDA = exports.CONTACTS_VERIFICATION_TABLE_PARTITION_KEY = exports.CONTACTS_VERIFICATION_TABLE_SORT_KEY = exports.CONTACTS_VERIFICATION_TABLE = exports.BULK_UPLOAD_CSV = exports.BULK_UPLOAD_BUCKET = exports.CONTACTS_TABLE_EMAIL_IDX = exports.CONTACTS_TABLE_CONTACTID_IDX = exports.CONTACTS_TABLE_PARTITION_KEY = exports.CONTACTS_TABLE_SORT_KEY = exports.TEN_TEN_JOURNAL_TABLE = exports.TEN_TEN_TASKS_TABLE = exports.TEN_TEN_PROJECTS_TABLE = exports.TEN_TEN_EMPLOYEES_TABLE = exports.TEN_TEN_USERS_TABLE_SORT_KEY = exports.TEN_TEN_USERS_TABLE_PARTITION_KEY = exports.TEN_TEN_USERS_TABLE = exports.CONTACTS_TABLE = exports.CONTACTS_VERIFICATION_TABLE_ARN = exports.CONTACTS_TABLE_ARN = exports.USER_VERIFICATION_SNS_QUEUE = exports.ALERT_ADMIN_SNS_QUEUE = exports.PINPOINT_CONTACT_COMMUNICATIONS_APPLICATION = exports.LAMBDA_ROLE = exports.AWS_REGION = exports.AWS_ACCOUNT = void 0;
// constants.ts
exports.AWS_ACCOUNT = "846708839800";
exports.AWS_REGION = "us-east-2";
exports.LAMBDA_ROLE = "LambdaRole";
//export const AWS_ACCOUNT = process.env.CDK_DEFAULT_ACCOUNT
//export const AWS_REGION = process.env.CDK_DEFAULT_REGION
// Since the Pinpoint is done manually. This needs to be updated for deployment - IF YOU ARE CREATING A NEW Pinpoint Project
// Production application ID = 2794595018b548c89e9ee4a88bba0b24
// Staging application ID = 9871c5e6bd70425bb81e0b1931b43f3f
// NOTE: This value MUST be consistent with the one in utils/constants.ts
exports.PINPOINT_CONTACT_COMMUNICATIONS_APPLICATION = "c1eb640662a348bcb3e67835f1614451";
// AutoBuilds from the AWS Variables
exports.ALERT_ADMIN_SNS_QUEUE = "arn:aws:sns:" + exports.AWS_REGION + ":" + exports.AWS_ACCOUNT + ":TurtleAI-ContactSNSTopic-AdminAlerts";
exports.USER_VERIFICATION_SNS_QUEUE = "arn:aws:sns:" + exports.AWS_REGION + ":" + exports.AWS_ACCOUNT + ":TurtleAI-ContactSNSTopic-ContactVerification";
exports.CONTACTS_TABLE_ARN = "arn:aws:dynamodb:" + exports.AWS_REGION + ":" + exports.AWS_ACCOUNT + ":table/TurtleAIContacts";
exports.CONTACTS_VERIFICATION_TABLE_ARN = "arn:aws:dynamodb:" + exports.AWS_REGION + ":" + exports.AWS_ACCOUNT + ":table/TurtleAIContactsVerification";
// Contacts Table
exports.CONTACTS_TABLE = "TurtleAIContacts";
// Ten Ten Resources
exports.TEN_TEN_USERS_TABLE = "TenTenUsers";
exports.TEN_TEN_USERS_TABLE_PARTITION_KEY = 'email';
exports.TEN_TEN_USERS_TABLE_SORT_KEY = 'name';
exports.TEN_TEN_EMPLOYEES_TABLE = "TenTenEmployees";
exports.TEN_TEN_PROJECTS_TABLE = "TenTenProjects";
exports.TEN_TEN_TASKS_TABLE = "TenTenTasks";
exports.TEN_TEN_JOURNAL_TABLE = "TenTenJournal";
// Ten Ten Resources
exports.CONTACTS_TABLE_SORT_KEY = 'email';
exports.CONTACTS_TABLE_PARTITION_KEY = 'contactId';
exports.CONTACTS_TABLE_CONTACTID_IDX = 'ContactIdIndex';
exports.CONTACTS_TABLE_EMAIL_IDX = 'EmailIndex';
// S3 Bucket
exports.BULK_UPLOAD_BUCKET = 'bulk-upload-contacts';
exports.BULK_UPLOAD_CSV = 'uploadContacts.csv';
// Contacts Verification Table
exports.CONTACTS_VERIFICATION_TABLE = "TurtleAIContactsVerification";
exports.CONTACTS_VERIFICATION_TABLE_SORT_KEY = 'contactId';
exports.CONTACTS_VERIFICATION_TABLE_PARTITION_KEY = 'contactVerificationId';
//export const CONTACTS_VERIFICATION_TABLE_CONTACTID_IDX = 'ContactIdIndex'
//export const CONTACTS_VERIFICATION_TABLE_EMAIL_IDX = 'EmailIndex'
exports.CREATE_CONTACTS_LAMBDA = "createContactLambda";
exports.RETRIEVE_CONTACTS_LAMBDA = "fetchContactLambda";
exports.UPDATE_CONTACTS_LAMBDA = "updateContactLambda";
exports.UPDATE_CONTACT_SUBSCRIPTION_LAMBDA = "updateContactSubscriptionsLambda";
exports.BULK_CREATE_CONTACTS_LAMBDA = "bulkCreateContactLambda";
exports.SUCCESS = 200;
exports.ERROR = 400;
exports.DOES_NOT_EXIST = 404;
exports.INTERNAL_ERROR = 500;
exports.POST = 'POST';
exports.DELETE = 'DELETE';
exports.GET = 'GET';
exports.PUT = 'PUT';
// Source of Contacts being created
exports.WEB_LEAD = "web-lead";
exports.BULK_UPLOAD = "bulk-upload";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxlQUFlO0FBQ0YsUUFBQSxXQUFXLEdBQUcsY0FBYyxDQUFBO0FBQzVCLFFBQUEsVUFBVSxHQUFHLFdBQVcsQ0FBQTtBQUV4QixRQUFBLFdBQVcsR0FBRyxZQUFZLENBQUE7QUFFdkMsNERBQTREO0FBQzVELDBEQUEwRDtBQUUxRCw0SEFBNEg7QUFFNUgsK0RBQStEO0FBQy9ELDREQUE0RDtBQUM1RCx5RUFBeUU7QUFDNUQsUUFBQSwyQ0FBMkMsR0FBRyxrQ0FBa0MsQ0FBQTtBQUU3RixvQ0FBb0M7QUFDdkIsUUFBQSxxQkFBcUIsR0FBRyxjQUFjLEdBQUMsa0JBQVUsR0FBQyxHQUFHLEdBQUMsbUJBQVcsR0FBQyx1Q0FBdUMsQ0FBQTtBQUN6RyxRQUFBLDJCQUEyQixHQUFHLGNBQWMsR0FBQyxrQkFBVSxHQUFDLEdBQUcsR0FBQyxtQkFBVyxHQUFDLCtDQUErQyxDQUFBO0FBQ3ZILFFBQUEsa0JBQWtCLEdBQUcsbUJBQW1CLEdBQUMsa0JBQVUsR0FBQyxHQUFHLEdBQUMsbUJBQVcsR0FBQyx5QkFBeUIsQ0FBQTtBQUM3RixRQUFBLCtCQUErQixHQUFHLG1CQUFtQixHQUFDLGtCQUFVLEdBQUMsR0FBRyxHQUFDLG1CQUFXLEdBQUMscUNBQXFDLENBQUE7QUFFbkksaUJBQWlCO0FBQ0osUUFBQSxjQUFjLEdBQUcsa0JBQWtCLENBQUE7QUFFaEQsb0JBQW9CO0FBQ1AsUUFBQSxtQkFBbUIsR0FBRyxhQUFhLENBQUE7QUFDbkMsUUFBQSxpQ0FBaUMsR0FBRyxPQUFPLENBQUE7QUFDM0MsUUFBQSw0QkFBNEIsR0FBRyxNQUFNLENBQUE7QUFFckMsUUFBQSx1QkFBdUIsR0FBRyxpQkFBaUIsQ0FBQTtBQUMzQyxRQUFBLHNCQUFzQixHQUFHLGdCQUFnQixDQUFBO0FBQ3pDLFFBQUEsbUJBQW1CLEdBQUcsYUFBYSxDQUFBO0FBQ25DLFFBQUEscUJBQXFCLEdBQUcsZUFBZSxDQUFBO0FBSXBELG9CQUFvQjtBQUdQLFFBQUEsdUJBQXVCLEdBQUcsT0FBTyxDQUFBO0FBQ2pDLFFBQUEsNEJBQTRCLEdBQUcsV0FBVyxDQUFBO0FBQzFDLFFBQUEsNEJBQTRCLEdBQUcsZ0JBQWdCLENBQUE7QUFDL0MsUUFBQSx3QkFBd0IsR0FBRyxZQUFZLENBQUE7QUFFcEQsWUFBWTtBQUNDLFFBQUEsa0JBQWtCLEdBQUcsc0JBQXNCLENBQUE7QUFDM0MsUUFBQSxlQUFlLEdBQUcsb0JBQW9CLENBQUE7QUFFbkQsOEJBQThCO0FBQ2pCLFFBQUEsMkJBQTJCLEdBQUcsOEJBQThCLENBQUE7QUFDNUQsUUFBQSxvQ0FBb0MsR0FBRyxXQUFXLENBQUE7QUFDbEQsUUFBQSx5Q0FBeUMsR0FBRyx1QkFBdUIsQ0FBQTtBQUNoRiwyRUFBMkU7QUFDM0UsbUVBQW1FO0FBRXRELFFBQUEsc0JBQXNCLEdBQUcscUJBQXFCLENBQUE7QUFDOUMsUUFBQSx3QkFBd0IsR0FBRyxvQkFBb0IsQ0FBQTtBQUMvQyxRQUFBLHNCQUFzQixHQUFHLHFCQUFxQixDQUFBO0FBQzlDLFFBQUEsa0NBQWtDLEdBQUcsa0NBQWtDLENBQUE7QUFDdkUsUUFBQSwyQkFBMkIsR0FBRyx5QkFBeUIsQ0FBQTtBQUV2RCxRQUFBLE9BQU8sR0FBRyxHQUFHLENBQUE7QUFDYixRQUFBLEtBQUssR0FBRyxHQUFHLENBQUE7QUFDWCxRQUFBLGNBQWMsR0FBRyxHQUFHLENBQUE7QUFDcEIsUUFBQSxjQUFjLEdBQUcsR0FBRyxDQUFBO0FBRXBCLFFBQUEsSUFBSSxHQUFHLE1BQU0sQ0FBQTtBQUNiLFFBQUEsTUFBTSxHQUFHLFFBQVEsQ0FBQTtBQUNqQixRQUFBLEdBQUcsR0FBRyxLQUFLLENBQUE7QUFDWCxRQUFBLEdBQUcsR0FBRyxLQUFLLENBQUE7QUFFeEIsbUNBQW1DO0FBQ3RCLFFBQUEsUUFBUSxHQUFHLFVBQVUsQ0FBQTtBQUNyQixRQUFBLFdBQVcsR0FBRyxhQUFhLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb25zdGFudHMudHNcbmV4cG9ydCBjb25zdCBBV1NfQUNDT1VOVCA9IFwiODQ2NzA4ODM5ODAwXCJcbmV4cG9ydCBjb25zdCBBV1NfUkVHSU9OID0gXCJ1cy1lYXN0LTJcIlxuXG5leHBvcnQgY29uc3QgTEFNQkRBX1JPTEUgPSBcIkxhbWJkYVJvbGVcIlxuXG4vL2V4cG9ydCBjb25zdCBBV1NfQUNDT1VOVCA9IHByb2Nlc3MuZW52LkNES19ERUZBVUxUX0FDQ09VTlRcbi8vZXhwb3J0IGNvbnN0IEFXU19SRUdJT04gPSBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9SRUdJT05cblxuLy8gU2luY2UgdGhlIFBpbnBvaW50IGlzIGRvbmUgbWFudWFsbHkuIFRoaXMgbmVlZHMgdG8gYmUgdXBkYXRlZCBmb3IgZGVwbG95bWVudCAtIElGIFlPVSBBUkUgQ1JFQVRJTkcgQSBORVcgUGlucG9pbnQgUHJvamVjdFxuXG4vLyBQcm9kdWN0aW9uIGFwcGxpY2F0aW9uIElEID0gMjc5NDU5NTAxOGI1NDhjODllOWVlNGE4OGJiYTBiMjRcbi8vIFN0YWdpbmcgYXBwbGljYXRpb24gSUQgPSA5ODcxYzVlNmJkNzA0MjViYjgxZTBiMTkzMWI0M2YzZlxuLy8gTk9URTogVGhpcyB2YWx1ZSBNVVNUIGJlIGNvbnNpc3RlbnQgd2l0aCB0aGUgb25lIGluIHV0aWxzL2NvbnN0YW50cy50c1xuZXhwb3J0IGNvbnN0IFBJTlBPSU5UX0NPTlRBQ1RfQ09NTVVOSUNBVElPTlNfQVBQTElDQVRJT04gPSBcImMxZWI2NDA2NjJhMzQ4YmNiM2U2NzgzNWYxNjE0NDUxXCJcblxuLy8gQXV0b0J1aWxkcyBmcm9tIHRoZSBBV1MgVmFyaWFibGVzXG5leHBvcnQgY29uc3QgQUxFUlRfQURNSU5fU05TX1FVRVVFID0gXCJhcm46YXdzOnNuczpcIitBV1NfUkVHSU9OK1wiOlwiK0FXU19BQ0NPVU5UK1wiOlR1cnRsZUFJLUNvbnRhY3RTTlNUb3BpYy1BZG1pbkFsZXJ0c1wiXG5leHBvcnQgY29uc3QgVVNFUl9WRVJJRklDQVRJT05fU05TX1FVRVVFID0gXCJhcm46YXdzOnNuczpcIitBV1NfUkVHSU9OK1wiOlwiK0FXU19BQ0NPVU5UK1wiOlR1cnRsZUFJLUNvbnRhY3RTTlNUb3BpYy1Db250YWN0VmVyaWZpY2F0aW9uXCJcbmV4cG9ydCBjb25zdCBDT05UQUNUU19UQUJMRV9BUk4gPSBcImFybjphd3M6ZHluYW1vZGI6XCIrQVdTX1JFR0lPTitcIjpcIitBV1NfQUNDT1VOVCtcIjp0YWJsZS9UdXJ0bGVBSUNvbnRhY3RzXCJcbmV4cG9ydCBjb25zdCBDT05UQUNUU19WRVJJRklDQVRJT05fVEFCTEVfQVJOID0gXCJhcm46YXdzOmR5bmFtb2RiOlwiK0FXU19SRUdJT04rXCI6XCIrQVdTX0FDQ09VTlQrXCI6dGFibGUvVHVydGxlQUlDb250YWN0c1ZlcmlmaWNhdGlvblwiXG5cbi8vIENvbnRhY3RzIFRhYmxlXG5leHBvcnQgY29uc3QgQ09OVEFDVFNfVEFCTEUgPSBcIlR1cnRsZUFJQ29udGFjdHNcIlxuXG4vLyBUZW4gVGVuIFJlc291cmNlc1xuZXhwb3J0IGNvbnN0IFRFTl9URU5fVVNFUlNfVEFCTEUgPSBcIlRlblRlblVzZXJzXCJcbmV4cG9ydCBjb25zdCBURU5fVEVOX1VTRVJTX1RBQkxFX1BBUlRJVElPTl9LRVkgPSAnZW1haWwnXG5leHBvcnQgY29uc3QgVEVOX1RFTl9VU0VSU19UQUJMRV9TT1JUX0tFWSA9ICduYW1lJ1xuXG5leHBvcnQgY29uc3QgVEVOX1RFTl9FTVBMT1lFRVNfVEFCTEUgPSBcIlRlblRlbkVtcGxveWVlc1wiXG5leHBvcnQgY29uc3QgVEVOX1RFTl9QUk9KRUNUU19UQUJMRSA9IFwiVGVuVGVuUHJvamVjdHNcIlxuZXhwb3J0IGNvbnN0IFRFTl9URU5fVEFTS1NfVEFCTEUgPSBcIlRlblRlblRhc2tzXCJcbmV4cG9ydCBjb25zdCBURU5fVEVOX0pPVVJOQUxfVEFCTEUgPSBcIlRlblRlbkpvdXJuYWxcIlxuXG5cblxuLy8gVGVuIFRlbiBSZXNvdXJjZXNcblxuXG5leHBvcnQgY29uc3QgQ09OVEFDVFNfVEFCTEVfU09SVF9LRVkgPSAnZW1haWwnXG5leHBvcnQgY29uc3QgQ09OVEFDVFNfVEFCTEVfUEFSVElUSU9OX0tFWSA9ICdjb250YWN0SWQnXG5leHBvcnQgY29uc3QgQ09OVEFDVFNfVEFCTEVfQ09OVEFDVElEX0lEWCA9ICdDb250YWN0SWRJbmRleCdcbmV4cG9ydCBjb25zdCBDT05UQUNUU19UQUJMRV9FTUFJTF9JRFggPSAnRW1haWxJbmRleCdcblxuLy8gUzMgQnVja2V0XG5leHBvcnQgY29uc3QgQlVMS19VUExPQURfQlVDS0VUID0gJ2J1bGstdXBsb2FkLWNvbnRhY3RzJ1xuZXhwb3J0IGNvbnN0IEJVTEtfVVBMT0FEX0NTViA9ICd1cGxvYWRDb250YWN0cy5jc3YnXG5cbi8vIENvbnRhY3RzIFZlcmlmaWNhdGlvbiBUYWJsZVxuZXhwb3J0IGNvbnN0IENPTlRBQ1RTX1ZFUklGSUNBVElPTl9UQUJMRSA9IFwiVHVydGxlQUlDb250YWN0c1ZlcmlmaWNhdGlvblwiXG5leHBvcnQgY29uc3QgQ09OVEFDVFNfVkVSSUZJQ0FUSU9OX1RBQkxFX1NPUlRfS0VZID0gJ2NvbnRhY3RJZCdcbmV4cG9ydCBjb25zdCBDT05UQUNUU19WRVJJRklDQVRJT05fVEFCTEVfUEFSVElUSU9OX0tFWSA9ICdjb250YWN0VmVyaWZpY2F0aW9uSWQnXG4vL2V4cG9ydCBjb25zdCBDT05UQUNUU19WRVJJRklDQVRJT05fVEFCTEVfQ09OVEFDVElEX0lEWCA9ICdDb250YWN0SWRJbmRleCdcbi8vZXhwb3J0IGNvbnN0IENPTlRBQ1RTX1ZFUklGSUNBVElPTl9UQUJMRV9FTUFJTF9JRFggPSAnRW1haWxJbmRleCdcblxuZXhwb3J0IGNvbnN0IENSRUFURV9DT05UQUNUU19MQU1CREEgPSBcImNyZWF0ZUNvbnRhY3RMYW1iZGFcIlxuZXhwb3J0IGNvbnN0IFJFVFJJRVZFX0NPTlRBQ1RTX0xBTUJEQSA9IFwiZmV0Y2hDb250YWN0TGFtYmRhXCJcbmV4cG9ydCBjb25zdCBVUERBVEVfQ09OVEFDVFNfTEFNQkRBID0gXCJ1cGRhdGVDb250YWN0TGFtYmRhXCJcbmV4cG9ydCBjb25zdCBVUERBVEVfQ09OVEFDVF9TVUJTQ1JJUFRJT05fTEFNQkRBID0gXCJ1cGRhdGVDb250YWN0U3Vic2NyaXB0aW9uc0xhbWJkYVwiXG5leHBvcnQgY29uc3QgQlVMS19DUkVBVEVfQ09OVEFDVFNfTEFNQkRBID0gXCJidWxrQ3JlYXRlQ29udGFjdExhbWJkYVwiXG5cbmV4cG9ydCBjb25zdCBTVUNDRVNTID0gMjAwXG5leHBvcnQgY29uc3QgRVJST1IgPSA0MDBcbmV4cG9ydCBjb25zdCBET0VTX05PVF9FWElTVCA9IDQwNFxuZXhwb3J0IGNvbnN0IElOVEVSTkFMX0VSUk9SID0gNTAwXG5cbmV4cG9ydCBjb25zdCBQT1NUID0gJ1BPU1QnXG5leHBvcnQgY29uc3QgREVMRVRFID0gJ0RFTEVURSdcbmV4cG9ydCBjb25zdCBHRVQgPSAnR0VUJ1xuZXhwb3J0IGNvbnN0IFBVVCA9ICdQVVQnXG5cbi8vIFNvdXJjZSBvZiBDb250YWN0cyBiZWluZyBjcmVhdGVkXG5leHBvcnQgY29uc3QgV0VCX0xFQUQgPSBcIndlYi1sZWFkXCJcbmV4cG9ydCBjb25zdCBCVUxLX1VQTE9BRCA9IFwiYnVsay11cGxvYWRcIiJdfQ==